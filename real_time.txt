# install opencv library
!pip install opencv-python


# Real time object detection
# using Webcam

import cv2  # computer vision

# # Haar Cascades --> Trained datset which can detect the object for which they have been trained for

eyeCascade = 'C:\\Users\\user\\Documents\\haarcascade_eye.xml'
faceCascade = 'C:\\Users\\user\\Documents\\haarcascade_frontalface_default.xml'

# Create a CascadeClassifier object

eye_cascade = cv2.CascadeClassifier(eyeCascade)
face_cascade = cv2.CascadeClassifier(faceCascade)

# create a video capture object
# cv2 --> videoCapture(Int_Value)

video_capture = cv2.VideoCapture(0)  # 0--> default webcam
while True:
    ret,img = video_capture.read() # it starts reading the feed from web
    
    gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)  # BGR: BLUE GREEN RED    
    
    # detect object : eyes and face
    # detectMultiScale()--> used to detect objects
    # scaleFactor --> it is used for resizing
    
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5, minSize=(30,30))
    for x,y,w,h in faces:
        # Draw a rectangle around faces
        img_1 = cv2.rectangle(img, (x,y), (x+w,y+h), (0,255,0), 2)
        # Create a region of interest (ROI)
        roi_gray = gray[y:y+h , x:x+w]
        roi_color = img[y:y+h , x:x+w]
        
        eyes = eye_cascade.detectMultiScale(roi_gray)
        for(ex, ey, ew, eh) in eyes:
            cv2.rectangle(roi_color, (ex,ey), (ex+ew,ey+eh), (0,255,0), 2)
    cv2.imshow('MyFace',img) # create output frame
    
    # Close The frame
    k = cv2.waitKey(5) & 0xFF   # ESC key code
    if k == 27:  # 27 is the ASCII value of ESC
        break
# Close The Window

video_capture.release()
cv2.destroyAllWindows()
